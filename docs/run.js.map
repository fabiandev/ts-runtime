{"version":3,"sources":["run.js"],"names":["tsp","initialized","getElement","document","getElementById","clearConsole","type","text","wrapConsoleText","logToText","message","_len","arguments","length","optionalParams","Array","_key","_i","_optionalParams","param","updateConsole","innerHTML","concat","JSON","stringify","div","createElement","innerText","log","data","escape","params","apply","this","unshift","target","style","opacity","fadeEffect","setInterval","parseFloat","clearInterval","display","_len2","_key2","name","originalLog","console","info","_len3","_key3","originalInfo","originalWarn","warn","_len4","_key4","error","originalError","url","lineNumber"],"mappings":"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","file":"run.js","sourcesContent":["if (!tsp.initialized) {\n  tsp.getElement = function getElement() {\n    return document.getElementById('console-content');\n  }\n\n  tsp.clearConsole = function clearConsole() {\n    tsp.getElement().innerHTML = '';\n  }\n\n  tsp.wrapConsoleText = function wrapConsoleText(type, text) {\n    return `<span class=\"log-${type}\"><span class=\"icon-${type}\"></span>${text}</span>`;\n  }\n\n  tsp.updateConsole = function updateConsole(type, message, ...optionalParams) {\n    let text = tsp.logToText(message);\n\n    for (let param of optionalParams) {\n      text += `\\n${tsp.logToText(param)}`;\n    }\n\n    text = tsp.wrapConsoleText(type, text);\n\n    tsp.getElement().innerHTML += `${text}\\n`;\n  }\n\n  tsp.logToText = function logToText(message) {\n    if (typeof message === 'object' && message !== null) {\n      return JSON.stringify(message);\n    }\n\n    return tsp.escape(message);\n  }\n\n  tsp.escape = function escape(text) {\n    const div = document.createElement('div');\n    div.innerText = text;\n    return div.innerHTML;\n  }\n\n  tsp.log = function log(data) {\n    const message = data.data.message;\n    const type = data.type;\n    const optionalParams = data.data.optionalParams;\n    const params = optionalParams;\n    params.unshift(message);\n    if (data.log) {\n      data.log.apply(this, params);\n    }\n    params.unshift(type);\n    tsp.updateConsole.apply(this, params);\n  }\n\n  tsp.fadeOut = function fadeOut(target) {\n    target.style.opacity = '1';\n\n    const fadeEffect = setInterval(() => {\n      if (parseFloat(target.style.opacity) < 0.05) {\n        clearInterval(fadeEffect);\n        target.style.opacity = '0';\n        target.style.display = 'none';\n      } else {\n        target.style.opacity = (parseFloat(target.style.opacity) - 0.02) + '';\n      }\n    }, 5);\n  }\n\n  tsp.originalLog = console.log;\n  console.log = function log(message, ...optionalParams) {\n    tsp.log({\n      name: 'log',\n      type: 'log',\n      log: tsp.originalLog,\n      data: {\n        message,\n        optionalParams\n      }\n    });\n  }\n\n  tsp.originalInfo = console.info;\n  console.info = function info(message, ...optionalParams) {\n    tsp.log({\n      name: 'log',\n      type: 'info',\n      log: tsp.originalInfo,\n      data: {\n        message,\n        optionalParams\n      }\n    });\n  }\n\n  tsp.originalWarn = console.warn;\n  console.warn = function warn(message, ...optionalParams) {\n    tsp.log({\n      name: 'log',\n      type: 'warn',\n      log: tsp.originalWarn,\n      data: {\n        message,\n        optionalParams\n      }\n    });\n  }\n\n  tsp.originalError = console.error;\n  console.error = function error(message, ...optionalParams) {\n    tsp.log({\n      name: 'log',\n      type: 'error',\n      log: tsp.originalError,\n      data: {\n        message,\n        optionalParams\n      }\n    });\n  }\n\n  tsp.initialized = true;\n}\n\nwindow.onerror = function(message, url, lineNumber) {\n  tsp.log({\n    name: 'error',\n    type: 'error',\n    // log: __originalError,\n    data: {\n      message,\n      optionalParams: []\n    }\n  });\n}\n"]}